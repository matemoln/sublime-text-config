{
	"path": "c:/dev/MinGW/bin",

	"shell": true,
	"cmd": "del start $file_base_name.exe & g++ $file_name -O0 -Wall -W -g -lglut -lopengl32 -lglu32 -o $file_base_name.exe & start $file_base_name.exe",
	
	"selector": "source.cpp",
	"file_regex": "(.*):([0-9]+):()(.*)",

	"variants": [
		{//Ezzel szigorúbb compilerbeállítások mellett fordíthatjátok a házi feladataitokat. Erre akkor lehet szükségetek, ha a c&a mellett mûködõ házi feladat valamilyen okból gyengélkedik a gordiuson. Ekkor érdemes lefordítani a cp-vel is, és megnézni, hogy úgy is fordul-e, illetve hogy milyen warningokat mond. A szigorúbb beállítások mellett a fordító warning üzenetek formájában szól a tömbök túlcímzése, és egyéb gyakori hibák esetén is. Röviden: a cp egy házsártos prog gyakvezért varázsol a gcc-bõl. Plusz egy tipp: mindig olvassatok warningokat!
			"name": "Pedantic build",
			"cmd": "g++ $file_name -O0 -Wextra -pedantic -std=c++98 -Wall -W -g -lglut -lopengl32 -lglu32 -o ${file_base_name}_pedantic.exe & start ${file_base_name}_pedantic.exe",
		},
		{//Fordítás compiler optimalizációkkal. Akkor érdemes használni, ha valamely házi feladathoz meghirdetett szépségversenyre készülsz, és számításigényes képeket kell elõállítani, vagy ha már a sokadik házidban szeretnél gyönyörködni, és ehhez a végletekig feltekernéd a tesszelláció mértékét (és hasonlók). Az így fordított binárisok akár egy nagyságrenddel gyorsabbak lehetnek, a lebegõpontos számítások viszont biztos, hogy pontatlanabbak lesznek. Csak akkor használd, ha tudod, mit csinálsz. Saját felelõsségre!
			"name": "Contest build",
			"cmd": "g++ $file_name -O3 -ffast-math -msse -msse2 -mfpmath=sse -Wall -W -g -lglut -lopengl32 -lglu32 -o ${file_base_name}_contest.exe & start ${file_base_name}_contest.exe",
		}
	]
}
